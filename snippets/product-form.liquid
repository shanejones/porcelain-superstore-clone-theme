{% assign stockFlag = 'oos' %}
{% assign is_pre_order_item = false %}
{% assign is_sold_by_box = false %}
{% assign has_free_sample = false %}
{% assign size_option = false %}
{% assign order_measurement = 'Box' %}

{% if current_variant.available %}
  {% assign stockFlag = 'available' %}
{% endif %}

{% for tag in product.tags %}
  {% assign tag_to_compare = tag | downcase %}
  {% if tag_to_compare == 'sticker preorder' %}
    {% assign is_pre_order_item = true %}
    {% break %}
  {% endif %}

  
  {% if tag_to_compare == 'sold-by-boxes' %}
    {% assign is_sold_by_box = true %}
    {% break %}
  {% endif %}
{% endfor %}

{%- capture low_stock_limit -%}
  {% render 'get-low-stock-limit', product: product  %}
{%- endcapture -%}
{% assign low_stock_limit = low_stock_limit | strip_new_lines | strip | plus: 0 %}{% comment %}str number conversion{% endcomment %}
{%- capture stock_map -%}{% render 'stock-map-json', variants: product.variants, low_stock_limit: low_stock_limit %}{%- endcapture -%}

<script>
  function cleanRefURL(){
  
  let url = document.referrer;
  let domain = document.location.origin;
  let path = url.replace(domain,'');
  let list = '';
  let length;

  if(path.includes('?')){
    let pos = path.indexOf('?');
    list = path.slice(0,pos);
  } else {
    list = path;
  }

  length = list.length;

  if(list.length > 1 && list.charAt(length-1) == '/'){
    return list.slice(0,length-1);
  } else if(list.length <= 1) {
    return '/';
  } else {
    return list;
  }

}
</script>

<div class="product-form-snippet">
  {% form "product", product, data-product-form: product.handle, data-product-in-stock: stockFlag, data-product-stock-map: stock_map %}

    {%- comment -%}box vs sheet vs bag etc{%- endcomment -%}
    {% for option in product.options_with_values %}
      {% if option.name == 'Sale-Size' %}
        {% assign order_measurement = option.values.first %}
        {% break %}
      {% endif %}
    {% endfor %}

    {% if product.variants.size > 1 %}
      {% for option in product.options_with_values %}
        {% if option.name == 'Sale-Size' %}
          {% for variant in product.variants %}
            {% if variant.option1 == 'Sample' %}
              {% assign has_free_sample = true %}
              {% assign size_option = variant.id %}
              
              <input type="hidden" id="option-{{option.position}}" data-option-select value="{{ order_measurement }}" />
              {% break %}
            {% endif %}
          {% endfor %}
          
          {% continue %}
        {% endif %}

        <label for="option-{{option.position}}" class="label">{{ 'products.product.option' | t: option: option.name }}</label>
        <div class="select-wrapper">
          <select data-option-select id="option-{{option.position}}" class="select">
            {% for value in option.values %}
              {% unless value contains 'Sample' %}
                <option {% if current_variant.options contains value %} selected="selected" {% endif %} value="{{ value | escape }}">{{ value }}</option>
              {% endunless %}
            {% endfor %}
          </select>
        </div>
      {% endfor %}
  
      <noscript>
        <select name="id">
          {% for variant in product.variants %}
            <option {% if variant == current_variant.id %} selected="selected" {% endif %}  value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money }}</option>
          {% endfor %}
        </select>
      </noscript>
    {% endif %}

    {% if is_sold_by_box %}    
      <div class="order-by-form-options display-order-by-area" data-order-by-options>
        {% if product.metafields.product.how_to_measure != blank %}
          <a 
            class="help" 
            href="#tab-how-to-order" 
            data-click-toggle='{"target": "#tab-how-to-order", "add": "accordion--open"}'
            data-scroll-smooth>
            {{ 'products.product.help' | t }}
          </a>
        {% endif %}

        <ul>
          <li data-order-by-option="area" data-click-toggle='{"target": "[data-order-by-options]", "add": "display-order-by-area", "remove": "display-order-by-box"}'>{{ 'products.product.order_by_unit' | t: unit: 'Area' }}</li>
          <li data-order-by-option="box" data-click-toggle='{"target": "[data-order-by-options]", "add": "display-order-by-box", "remove": "display-order-by-area"}'>{{ 'products.product.order_by_unit' | t: unit: order_measurement }}</li>
        </ul>

        <div data-order-by-area>
          <div class="area-selector-wrapper">
            <span data-input-suffix class="input-suffix">mÂ²</span>
            <span data-low-stock class="low-stock hide">{{ 'products.product.low_stock' | t }}</span>
            <input
              type="number"
              class="text-input"
              inputmode="decimal"
              step="0.1"
              min="0"
              data-order-by-area-input 
              placeholder='0.0' 
              data-product-area-quantity-calc="{{ product.metafields.product.per_box_size }}" />
          </div> 
        </div>

        <div data-order-by-box>
          {% render "quantity-selector", item: current_variant %}
        </div>
      </div> 
      
      <input type="hidden" data-product-form-quantity-input value="1" name="quantity">
    {% else %}
      {% render "quantity-selector", item: current_variant %}
    {% endif %}

    {%- comment -%} Product Swatches {%- endcomment -%}
    {% render 'product-swatches' %}
  
    <input type="hidden" name="id" value="{{ current_variant.id }}" class="input-variant-id">

    <div class="product-details-price">
      
      {%- comment -%}pluralize item sizes{%- endcomment -%}
      {% assign order_measurement = order_measurement | downcase %}
      {% if order_measurement == 'box' %}
        {% assign order_measurement = order_measurement | append: '(es)' %}
      {% else %}
        {% assign order_measurement = order_measurement | append: '(s)' %}
      {% endif %}

        <div class="unit-size-info"> 
          {% if current_variant.metafields.product.per_box_size != blank %}
            {{ 'products.product.product_box_size_html' | t: qty: 1, unit: order_measurement, per_box_size: current_variant.metafields.product.per_box_size }}  
          {% endif %}
        </div>
      {% render 'product-details-price', product: product, current_variant: current_variant %}
    </div>
  
    {% if is_pre_order_item %}
      <div class="preorder-notice">
        <p class="label">{{ 'products.product.preorder_title' | t }}</p>
        <p>{{ product.metafields.preorder.message }}</p>
      </div>

      <button 
        data-product-form-submit
        data-in-stock-text="{{ 'products.product.add_to_cart' | t: unit: order_measurement }}"
        data-unavailable-text="{{ 'products.product.unavailable' | t }}"
        data-oos-text="{{ 'products.product.sold_out' | t }}"
        data-success-text="{{ 'products.product.added' | t }}"
        data-add-to-cart
        data-atc-quantity-input="[data-product-form-quantity-input]"
        data-atc-product-id="{{ current_variant.id }}"
        type="submit"
        class="btn--atc btn btn--secondary btn--lg">{{ 'products.product.preorder' | t: date: product.metafields.preorder.date }}</button>
    {% else %}
      {% assign atc_button_text = 'products.product.sold_out' | t %}
      {% if current_variant.available %}
        {% assign atc_button_text = 'products.product.add_to_cart_html' | t: unit: order_measurement %}
      {% endif %}
      
      <div class="add-to-cart-btn-container {% if has_free_sample %}free-sample{% endif %}">
        
        <button {% unless current_variant.available %}disabled{% endunless %} 
          data-product-form-submit
          data-in-stock-text="{{ atc_button_text }}"
          data-unavailable-text="{{ 'products.product.unavailable' | t }}"
          data-oos-text="{{ 'products.product.sold_out' | t }}"
          data-success-text="{{ 'products.product.added_to_cart' | t }}"
          data-add-to-cart
          data-atc-quantity-input="[data-quantity-input]"
          data-atc-product-id="{{ current_variant.id }}"
          type="submit"
          class="btn--atc btn btn-primary"
          onclick="dlAddToCart()">{{ atc_button_text }}</button>

        {% if has_free_sample %}
          {%- comment -%} check if there is > 4 samples or an existing sample of the same in the cart {%- endcomment -%}
          {% assign maxSamples = false %}
          {% assign sampleInCart = false %}
          {% assign sampleCount = 0 %}
          {% for item in cart.items %}
            {% if size_option == item.variant_id %}
              {% assign sampleInCart = true %}
              {% break %}
            {% endif %}

            {%- comment -%}check if its a sample{%- endcomment -%}
            {% assign isASample = false %}
            {% for option in item.options_with_values %}
              {% if option.value contains 'Sample' %}
                {% assign isASample = true %}
                {% break %}
              {% endif %}
            {% endfor %}

            {% if isASample %}
              {% assign sampleCount = sampleCount | plus: 1 %}
              {% if sampleCount == 4 %}
                {% assign maxSamples = true %}
                {% break %}
              {% endif %}
            {% endif %}
          {% endfor %}

          {% if maxSamples == false and sampleInCart == false %}
            <input type="hidden" value="1" data-free-sample-quantity-input />
            <button {% unless current_variant.available %}disabled{% endunless %} 
            data-product-form-submit
            data-in-stock-text="{{ 'products.product.add_to_cart' | t: unit: order_measurement }}"
            data-unavailable-text="{{ 'products.product.unavailable' | t }}"
            data-oos-text="{{ 'products.product.sold_out' | t }}"
            data-success-text="{{ 'products.product.added_to_cart' | t }}"
            data-add-to-cart
            data-atc-quantity-input="[data-free-sample-quantity-input]"
            data-atc-product-id="{{ size_option }}"
            data-is-sample="true"
            data-sample-added-text="{{ 'products.product.sample_added' | t }}"
            data-sample-added-error-toast-text="{{ 'products.product.sample_added_error_toast' | t }}"
            data-max-samples="{{ 'products.product.max_samples' | t }}"
            type="submit"
            class="btn--atc btn btn-secondary">{{ 'products.product.add_to_cart_free_sample' | t }}</button>
          {% else %}
            <button 
              disabled
              data-max-samples="{{ 'products.product.max_samples' | t }}"
              data-in-stock-text="{{ 'products.product.add_to_cart' | t: unit: order_measurement }}"
              data-unavailable-text="{{ 'products.product.unavailable' | t }}"
              data-oos-text="{{ 'products.product.sold_out' | t }}"
              data-success-text="{{ 'products.product.added_to_cart' | t }}"
              data-atc-product-id="{{ size_option }}"
              data-is-sample="true"
              type="submit"
              class="btn--atc btn btn-secondary">
              {% if maxSamples %}
                {{ 'products.product.max_samples' | t }}
              {% else %}
                {{ 'products.product.sample_added' | t }}
              {% endif %}
            </button>
          {% endif %}
        {% endif %}
      </div>
    {% endif %}
  {% endform %}
</div>

<script>
  const sampleBtnContainer = document.querySelector('.add-to-cart-btn-container')
  window.addEventListener('scroll', () => {
    const isScrolledIntoView = (el) => {
      const rect = el.getBoundingClientRect();
      const elemTop = rect.top;
      const elemBottom = rect.bottom;

      // Only completely visible elements return true:
      const isVisible = elemBottom <= window.innerHeight;
      // Partially visible elements return true:
      const sampleBtn = sampleBtnContainer.querySelector('[data-sample-added-text]')
      if (isVisible && window.innerWidth < 768) {
        sampleBtn.style.position = 'fixed'
        sampleBtn.style.width = 'calc(100% - 32px)'
      } else {
        sampleBtn.style.position = 'relative'
        sampleBtn.style.width = '100%'
      }
    }

    isScrolledIntoView(sampleBtnContainer)
  })

</script>

<script>
  let variantId = document.querySelector(".input-variant-id");
  let productInfo = ShopifyAnalytics.meta.product;
  let variantSku;
  let variantTitle;
  let variantPrice;
        
  function dlAddToCart(){
    for(let i = 0; i < productInfo.variants.length; i++){
        if(variantId.value == productInfo.variants[i].id){
              variantSku = productInfo.variants[i].sku;
              variantTitle = productInfo.variants[i].public_title ;
              variantPrice = productInfo.variants[i].price;
          }
      }
          
      dataLayer.push({
        event:'dl_add_to_cart',
          ecommerce: {
            add: {
                actionField: {
                  list:cleanRefURL()
                },   
                products : [{
                  name: '{{ product.title }}',
                  variant: variantTitle,
                  id: variantSku,
                  dimension2:'{{ product.id }}',
                  dimension3: variantId.value,
                  price: variantPrice/100,
                  brand:'{{ product.vendor }}',
                  category:'{{ product.type }}',
                  list_name:cleanRefURL()
                }]
             }
          }
       });
   }
</script>